[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "amp-rbc-md"
version = "1.0.0"
description = "Batch-fähige Martini-3-Simulation roter Blutkörperchen-Peptide mit Replika-Support und WHAM-Bootstrap-Analyse"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "amp-rbc-md Team", email = "contact@amp-rbc-md.org"}
]
maintainers = [
    {name = "amp-rbc-md Team", email = "contact@amp-rbc-md.org"}
]
keywords = ["molecular-dynamics", "gromacs", "martini", "alphafold", "membrane", "peptides"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.10"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "pandas>=1.5.0",
    "numpy>=1.24.0",
    "tqdm>=4.64.0",
    "matplotlib>=3.5.0",
    "mlflow>=2.0.0",
    "moviepy>=1.0.3",
    "rich>=12.0.0",
    "biopython>=1.79",
    "omegaconf>=2.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "isort>=5.10.0",
    "pre-commit>=3.4.0",
]
gpu = [
    "torch>=2.3.0",
    "fastfold @ git+https://github.com/hpcaitech/FastFold.git@main",
    "deepspeed>=0.14.4",
]

[project.scripts]
amp-rbc-md = "amp_rbc_md.cli:main"

[project.urls]
Homepage = "https://github.com/Hoimel1/amp-rbc-md"
Repository = "https://github.com/Hoimel1/amp-rbc-md"
Documentation = "https://github.com/Hoimel1/amp-rbc-md/tree/main/docs"
Issues = "https://github.com/Hoimel1/amp-rbc-md/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
] 